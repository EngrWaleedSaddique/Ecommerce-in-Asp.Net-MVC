@model ECommerce.Web.ViewModels.CheckoutViewModel
@if(Model.CartProducts!=null&&Model.CartProducts.Count>0)
{
    var i = 1;
<div class="container">
    <div class="row">
        <div class="col-md-4 order-md-2 mb-4">
            <h4 class="d-flex justify-content-between align-items-center mb-3">
                <span class="text-muted">Your cart</span>
                <span class="badge badge-secondary badge-pill">3</span>
            </h4>
            <ul class="list-group mb-3">
                @foreach (var product in Model.CartProducts)
                {
                    var productQuantity = Model.CartProductIDs.Where(productID => productID == product.ID).Count();
                    <li class="list-group-item d-flex justify-content-between lh-condensed" data-id="@product.ID">
                        <div>
                            <h6 class="my-0">@i -@product.Name - QTY:@productQuantity</h6>
                            <small class="text-muted">@(product.Description.Length>100?product.Description.Substring(0,99):product.Description)</small>
                        </div>
                        <span class="text-muted">Unit Price: $@product.Price - TotalPrice:(@(productQuantity*product.Price))</span>
                    </li>
                    i++;
                }



                <li class="list-group-item d-flex justify-content-between">
                    <span>Total (USD)</span>
                    <strong>$ @Model.CartProducts.Sum(x => x.Price * Model.CartProductIDs.Where(productID => productID == x.ID).Count())</strong>
                </li>
            </ul>
        </div>
        <div class="col-md-8 order-md-1">
            <h4 class="mb-3">Billing address</h4>
            <form class="needs-validation" novalidate="">
                <div class="row">
                    <div class="col-md-12 mb-3">
                        <label for="firstName">Name</label>
                        <input type="text" class="form-control" id="Name" placeholder="" value="@Model.User.Name" required="">
                        <div class="invalid-feedback">
                            Valid first name is required.
                        </div>
                    </div>
                    
                </div>
                <div class="mb-3">
                    <label for="email">Email</label>
                    <input type="email" class="form-control" id="Email" value="@Model.User.Email" placeholder="you@example.com">
                    <div class="invalid-feedback">
                        Please enter a valid email address for shipping updates.
                    </div>
                </div>

                <div class="mb-3">
                    <label for="address">Address</label>
                    <input type="text" class="form-control" id="address" placeholder="1234 Main St" value="@Model.User.Address" required="">
                    <div class="invalid-feedback">
                        Please enter your shipping address.
                    </div>
                </div>
                <hr class="mb-4">
                <button id="placeOrderBtn" class="btn btn-primary btn-lg btn-block" type="button">Place Order!</button>
            </form>
        </div>
    </div>
</div>


<script>
    $("#placeOrderBtn").click(function () {
        $.ajax(
            {
                url: '@Url.Action("PlaceOrder", "Shop")', /*'/Product/ProductTable',*/
                data:
                {
                    productIDs: '@string.Join("-",Model.CartProductIDs )'
                }
            }).done(function (response) {
                if (response.Success) {
                    $.cookie('CartProducts',null, { path: '/' });
                    updateCartProducts();
                    swal("Done", "Your Ordered has been Placed.", "success").then((value) => {
                        window.location = "@Url.Action("Index","Shop")";
                    });;
                }
                else {
                    swal("Failed", "Unable to place order.", "warning");
                }
            }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            });

    });
</script>


}
else
{
      <div>
          <h1>No Products In Cart.</h1>
      </div>
}



