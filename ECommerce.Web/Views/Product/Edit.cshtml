@model EditProductViewModel
@{
    ViewBag.Title = "Edit";
}
<h2>Edit Product</h2>

<form id="editProduct">
    <div class="form-group">
        <label>Category</label>
        <select class="form-control" name="CategoryID">
            @foreach (var category in Model.AvailableCategories)
            {
                var selected = category.ID == Model.CategoryID ? "selected" : string.Empty;
                <option value="@category.ID" @selected>@category.Name</option>
            }
        </select>
    </div>
        <div class="form-group">
            <input name="ID" type="hidden" value="@Model.ID" />
        </div>
        <div class="form-group">
            <label>Name</label>
            <input name="Name" class="form-control" value="@Model.Name" />
        </div>
        <div class="form-group">
            <label>Description</label>
            <input name="Description" class="form-control" value="@Model.Description" />
        </div>
        <div class="form-group">
            <label>Price</label>
            <input name="Price" class="form-control" value="@Model.Price" />
        </div>
        <div class="form-group">
            <label>Image</label>
            <input id="ImageURL" name="ImageURL" value="@Model.ImageURL" type="hidden" />
            <input class="form-control" id="imageUpload" name="Image" type="file" />
            <img id="productImage" src="@Model.ImageURL" width="100" height="100" />
        </div>
        <button id="updateBtn" class="btn btn-danger" type="button">Update</button>
        <button id="cancelBtn" class="btn btn-danger" type="button">Cancel</button>
</form>
<script>
    $('#editProduct').validate({
        rules: {
            Name: {
                required: true,
                minlength: 1,
                maxlength: 50
            },
            Description: {
                maxlength: 500
            },
            Price:
            {
                required: true,
                range: [1, 100000]
            }
        },
        messages:
        {
            Name: {
                required: 'Name is required',
                minlength: 'Minimum length is 1',
                maxlength: 'Maximum length is 50'
            },
            Description: {
                maxlength: 'Max length is 500'
            },
            Price: {
                required: 'Price is required',
                range: 'Price must be available within 1-100000'
            }
        }
    });
    $("#imageUpload").change(function () {
        var element = this;
        var formData = new FormData();
        var totalFiles = element.files.length;
        for (var i = 0; i < totalFiles; i++) {
            var file = element.files[i];
            formData.append("Photo", file);
        }

        $.ajax(
            {
                type: 'POST',
                url: '/Shared/UploadImage',
                data: formData,
                //When we have to upload the image then we have to add below three attributes.
                dataType: 'json',
                contentType: false,
                processData: false
            }).done(function (response) {
                debugger;
                console.log(response);
                if (response.Success) {
                    $("#productImage").attr("src", response.ImageURL);
                    $("#ImageURL").val(response.ImageURL);
                }
            }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Fail");
            });

    });
    $("#updateBtn").click(function () {
        if ($("#editProduct").valid()) {
            $.ajax(
                {
                    type: 'post',
                    url: '/Product/Edit',
                    data: $("#editProduct").serialize()
                }).done(function (response) {
                    $("#tableContainer").html(response);
                    $("#actionContainer").html("");

                }).fail(function (XMLHttpRequest, textStatus, errorThrown) {
                    alert("Fail");
                });
        }
        else {
            swal({
                title: "Warning",
                text: "Please enter all valid data required fields",
                icon: "warning",
                buttons: true,
                dangerMode: true,
            });
        }
    });
    $("#cancelBtn").click(function () {
        $("#actionContainer").html("");
        focusAction("tableContainer");
    });
</script>
